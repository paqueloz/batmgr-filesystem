<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.batmgr</groupId>
    <artifactId>batmgr-filesystem</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <configuration>
                    <target>
                        <copy
                                file="${project.build.directory}\${project.build.finalName}.${project.packaging}"
                                toFile="${basedir}/target/lib/${project.build.finalName}.${project.packaging}"/>
                    </target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <goals>deploy antrun:run dependency:copy-dependencies</goals>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <outputDirectory>${basedir}/target/lib</outputDirectory>
                    <!--					<overWriteReleases>false</overWriteReleases>
                                        <overWriteSnapshots>false</overWriteSnapshots>
                                        <overWriteIfNewer>true</overWriteIfNewer>
                                        <includeScope>runtime</includeScope>
                     -->
                    <includeScope>compile</includeScope> <!-- Permet d'exclure les jars	de test -->

                </configuration>
                <!-- run "mvn clean dependency:copy-dependencies -DincludeScope=runtime"
                    to perform the copy -->
            </plugin>
            <!-- goal exec:java@id
            pour le @id, il faut Maven >= 3.3.1
            dans Eclipse ajouter à la JVM de lancement -Dmaven.multiModuleProjectDirectory=$M2_HOME
            -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.5.0</version>
                <!-- pour ajouter d'autres exécutions, voir
                http://stackoverflow.com/questions/8252107/is-it-possible-to-execute-two-different-maven-exec-maven-plugin-in-a-single-pom  -->
                <executions>
                    <execution>
                        <id>synchronize-execution</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <!-- copie récursive de arg0 dans arg1 -->
                            <mainClass>com.batmgr.filesystem.Synchronize</mainClass>
                            <arguments>
                                <argument>d:\data</argument>
                                <argument>f:\data</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <testResources>
            <testResource>
                <directory>${basedir}/src/test/resources</directory>
            </testResource>
        </testResources>
    </build>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.8.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
